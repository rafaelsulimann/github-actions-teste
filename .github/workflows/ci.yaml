name: CI

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Determine changed services
      id: get_changed_services
      run: |
        if git cat-file -e ${{ github.event.before }} && git cat-file -e ${{ github.sha }}; then
          changed_services=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | awk -F"/" '{print $1}' | sort -u | paste -sd, -)
          echo "Changed services: $changed_services"
          echo "CHANGED_SERVICES=$changed_services" >> $GITHUB_ENV
        else
          echo "Um ou ambos os commits não existem no repositório."
          echo "CHANGED_SERVICES=" >> $GITHUB_ENV
        fi

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push changed services
      run: |
        IFS=',' read -ra SERVICES <<< "$CHANGED_SERVICES"
        IGNORED_DIRECTORIES=(".github")

        for service in "${SERVICES[@]}"; do
            if [[ " ${IGNORED_DIRECTORIES[@]} " =~ " ${service} " ]]; then
                continue
            fi

            echo "Processing $service..."

            # Lógica de determinação da versão já explicada anteriormente
            response=$(curl -s "https://hub.docker.com/v2/repositories/***/$service/tags/")
            if [[ $(echo "$response" | jq '.count') -gt 0 ]]; then
                version=$(echo "$response" | jq -r '.results[0].name' | awk -F"v" '{print $2 + 1}')
            else
                version=1
            fi

            # Build da imagem
            docker build -t ***/$service:v$version -t ***/$service:latest $service/

            # Push das tags
            docker push ***/$service:v$version
            docker push ***/$service:latest
        done
